è?
bC:\Users\artur\Downloads\Calidad_Proyecto 4\Calidad_version_1-master\CapaLogica\Alumno\L_Alumno.cs
	namespace		 	

CapaLogica		
 
{

 
public 

class 
L_Alumno 
{ 
private 
static 
readonly 
L_Alumno  (

_instancia) 3
=4 5
new6 9
L_Alumno: B
(B C
)C D
;D E
public 
static 
L_Alumno 
	Instancia (
{ 	
get 
{ 
return 
L_Alumno !
.! "

_instancia" ,
;, -
}. /
} 	
private 
bool  
verificaciones_datos )
(* +
E_Alumno+ 3
ea4 6
)6 7
{ 	
int 
aux 
; 
bool 
validar 
= 
false  
;  !
bool 
	resultado 
= 
Int32 "
." #
TryParse# +
(+ ,
ea, .
.. /
	Alumn_dni/ 8
,8 9
out: =
aux> A
)A B
;B C
if 
( 
	resultado 
&& 
ea 
.  
	Alumn_dni  )
.) *
Length* 0
==1 3
$num4 5
)5 6
{ 
if 
( 
ea 
. 
Alum_Telefono $
.$ %
Length% +
==, .
$num/ 0
)0 1
{ 
string 
correo !
=" #
ea$ &
.& '
Alum_Correo' 2
;2 3
int 
posicion  
=! "
$num# $
;$ %
int   
posicion_final   &
=  ' (
$num  ) *
;  * +
bool!! 
auxiliar!! !
=!!" #
false!!$ )
;!!) *
if"" 
("" 
!"" 
correo"" 
[""  
$num""  !
]""! "
.""" #
Equals""# )
("") *
$str""* -
)""- .
)"". /
{## 
for$$ 
($$ 
int$$  
i$$! "
=$$# $
$num$$% &
;$$& '
i$$( )
<$$* +
correo$$, 2
.$$2 3
Length$$3 9
;$$9 :
i$$; <
++$$< >
)$$> ?
{%% 
if&& 
(&&  
correo&&  &
[&&& '
i&&' (
]&&( )
.&&) *
ToString&&* 2
(&&2 3
)&&3 4
.&&4 5
Equals&&5 ;
(&&; <
$str&&< ?
)&&? @
)&&@ A
{'' 
posicion((  (
=(() *
i((+ ,
;((, -
})) 
if** 
(**  
correo**  &
[**& '
i**' (
]**( )
.**) *
ToString*** 2
(**2 3
)**3 4
.**4 5
Equals**5 ;
(**; <
$str**< ?
)**? @
)**@ A
posicion_final**B P
=**Q R
i**S T
;**T U
}++ 
string,, 
auxi,, #
=,,$ %
$str,,& (
;,,( )
for-- 
(-- 
int--  
i--! "
=--# $
posicion--% -
+--- .
$num--. /
;--/ 0
i--1 2
<--3 4
posicion_final--5 C
;--C D
i--E F
++--F H
)--H I
auxi--J N
+=--O Q
correo--R X
[--X Y
i--Y Z
]--Z [
;--[ \
if.. 
(.. 
auxi..  
...  !
Equals..! '
(..' (
$str..( 1
)..1 2
||..3 5
auxi..6 :
...: ;
Equals..; A
(..A B
$str..B I
)..I J
)..J K
auxiliar..L T
=..U V
true..W [
;..[ \
if// 
(// 
auxiliar// $
==//% '
true//( ,
)//, -
validar//. 5
=//5 6
true//7 ;
;//; <
}00 
}33 
}55 
return77 
validar77 
;77 
}88 	
public99 
bool99 
crear_alumno99  
(99  !
E_Alumno99! )
ea99* ,
)99- .
{:: 	
ea;; 
.;; 
Alum_ID;; 
=;; 
	CD_Alumno;; "
.;;" #
	Instancia;;# ,
.;;, -
id_automatico;;- :
(;;: ;
);;; <
;;;< =
if<< 
(<<  
verificaciones_datos<< $
(<<$ %
ea<<% '
)<<' (
)<<( )
if== 
(== 
	CD_Alumno== 
.== 
	Instancia== '
.==' (
validar_dni==( 3
(==3 4
ea==4 6
.==6 7
	Alumn_dni==7 @
)==@ A
====B D
false==E J
)==J K
if>> 
(>> 
D_Crear_Inscripcion>> +
.>>+ ,
	Instancia>>, 5
.>>5 6%
Crear_Alumnos_Inscripcion>>6 O
(>>O P
ea>>P R
)>>R S
)>>S T
return?? 
true?? #
;??# $
returnAA 
falseAA 
;AA 
}CC 	
publicDD 
boolDD 
modificar_alumnoDD $
(DD$ %
E_AlumnoDD% -
eaDD. 0
)DD0 1
{EE 	
ifFF 
(FF 
D_Crear_InscripcionFF #
.FF# $
	InstanciaFF$ -
.FF- .)
Modificar_Alumnos_InscripcionFF. K
(FFK L
eaFFL N
)FFN O
)FFO P
returnGG 
trueGG 
;GG 
returnII 
falseII 
;II 
}JJ 	
publicKK 
E_AlumnoKK 
listar_alumno_dniKK )
(KK) *
stringKK* 0
dniKK1 4
)KK4 5
{LL 	
E_AlumnoMM 
auxMM 
=MM 
newMM 
E_AlumnoMM &
(MM& '
)MM' (
;MM( )
ifNN 
(NN 
D_Crear_InscripcionNN #
.NN# $
	InstanciaNN$ -
.NN- .
Listar_alumnos_DNINN. @
(NN@ A
dniNNA D
)NND E
!=NNF H
nullNNI M
)NNM N
auxOO 
=OO 
D_Crear_InscripcionOO )
.OO) *
	InstanciaOO* 3
.OO3 4
Listar_alumnos_DNIOO4 F
(OOF G
dniOOG J
)OOJ K
;OOK L
returnPP 
auxPP 
!=PP 
nullPP 
?PP 
auxPP  #
:PP$ %
nullPP& *
;PP* +
}QQ 	
publicRR 
ListRR 
<RR 
E_AlumnoRR 
>RR 
listar_alumnosRR ,
(RR, -
)RR- .
{SS 	
ListTT 
<TT 
E_AlumnoTT 
>TT 
listaTT  
=TT! "
newTT# &
ListTT' +
<TT+ ,
E_AlumnoTT, 4
>TT4 5
(TT5 6
)TT6 7
;TT7 8
;TT9 :
listaUU 
=UU 
D_Crear_InscripcionUU '
.UU' (
	InstanciaUU( 1
.UU1 2&
Listar_alumnos_InscripcionUU2 L
(UUL M
)UUM N
;UUN O
returnVV 
listaVV 
.VV 
CountVV 
>VV  
$numVV! "
?VV# $
listaVV% *
:VV+ ,
nullVV- 1
;VV1 2
}XX 	
publicZZ 
boolZZ '
verificar_existencia_alumnoZZ /
(ZZ/ 0
stringZZ0 6
dniZZ7 :
)ZZ: ;
{[[ 	
return\\ 
	CD_Alumno\\ 
.\\ 
	Instancia\\ &
.\\& '
validar_dni\\' 2
(\\2 3
dni\\3 6
)\\6 7
==\\8 :
true\\; ?
?\\@ A
true\\C G
:\\H I
false\\J O
;\\O P
}]] 	
}cc 
}dd é"
jC:\Users\artur\Downloads\Calidad_Proyecto 4\Calidad_version_1-master\CapaLogica\Becas\CL_BecaExcelencia.cs
	namespace 	

CapaLogica
 
. 
Becas 
{ 
public 

class 
CL_BecaExcelencia "
{ 
private 
static 
readonly 
CL_BecaExcelencia  1

_instancia2 <
== >
new? B
CL_BecaExcelenciaC T
(T U
)U V
;V W
public 
static 
CL_BecaExcelencia '
	Instancia( 1
{ 	
get 
{ 
return 
CL_BecaExcelencia *
.* +

_instancia+ 5
;5 6
}7 8
} 	
public 
bool 
Beca_exelencia "
(" #
E_Alumno# +
ea, .
). /
{ 	
bool 

verificado 
= 
false #
;# $
E_Calificaciones   
calificaciones   +
=  , -
new  . 1
E_Calificaciones  2 B
(  B C
)  C D
;  D E
if!! 
(!! 
CD_Calificacines!!  
.!!  !
	Instancia!!! *
.!!* +&
mostrar_calificaciones_dni!!+ E
(!!E F
ea!!F H
.!!H I
	Alumn_dni!!I R
)!!R S
!=!!T V
null!!W [
)!![ \
{"" 
calificaciones## 
=##  
CD_Calificacines##! 1
.##1 2
	Instancia##2 ;
.##; <&
mostrar_calificaciones_dni##< V
(##V W
ea##W Y
.##Y Z
	Alumn_dni##Z c
)##c d
;##d e
if$$ 
($$ 
calificaciones$$ "
.$$" #
Califi_Promedio$$# 2
>=$$3 5
$num$$6 8
)$$8 9
{%% 
if&& 
(&& 
CD_BecaExcelencia&& )
.&&) *
	Instancia&&* 3
.&&3 4$
modificar_pension_alumno&&4 L
(&&L M
ea&&M O
.&&O P
	Alumn_dni&&P Y
)&&Y Z
)&&Z [

verificado'' "
=''# $
true''% )
;'') *
}(( 
})) 
return** 

verificado** 
;** 
}++ 	
public,, 
bool,, !
verificar_Alumno_Beca,, )
(,,) *
string,,* 0
dni,,1 4
),,4 5
{-- 	
return.. 
CD_BecaExcelencia.. $
...$ %
	Instancia..% .
.... /!
verificar_Alumno_Beca../ D
(..D E
dni..E H
)..H I
;..I J
}// 	
public00 
List00 
<00 
E_BecaPorPromedio00 %
>00% &
ListarBecas00' 2
(002 3
)003 4
{11 	
return22 
CD_BecaExcelencia22 $
.22$ %
	Instancia22% .
.22. /
ListaDeBeca22/ :
(22: ;
)22; <
!=22= ?
null22@ D
?22E F
CD_BecaExcelencia22G X
.22X Y
	Instancia22Y b
.22b c
ListaDeBeca22c n
(22n o
)22o p
:22q r
null22s w
;22w x
}33 	
public55 
E_Alumno55 $
Mostrar_Alumno_Exelencia55 0
(550 1
string551 7
dni558 ;
)55; <
{66 	
E_Alumno77 
aux77 
=77 
new77 
E_Alumno77 '
(77' (
)77( )
;77) *
if88 
(88 
	CD_Alumno88 
.88 
	Instancia88 #
.88# $
validar_dni88$ /
(88/ 0
dni880 3
)883 4
)884 5
if99 
(99 
CD_BecaExcelencia99 %
.99% &
	Instancia99& /
.99/ 0$
Obtener_Alumno_Exelencia990 H
(99H I
dni99I L
)99L M
!=99N P
null99Q U
)99U V
aux:: 
=:: 
CD_BecaExcelencia:: +
.::+ ,
	Instancia::, 5
.::5 6$
Obtener_Alumno_Exelencia::6 N
(::N O
dni::O R
)::R S
;::S T
return;; 
aux;; 
!=;; 
null;; 
?;;  
aux;;! $
:;;% &
null;;' +
;;;+ ,
}<< 	
}>> 
}?? Í(
sC:\Users\artur\Downloads\Calidad_Proyecto 4\Calidad_version_1-master\CapaLogica\Calificaciones\CL_calificaciones.cs
	namespace		 	

CapaLogica		
 
.		 
Calificaciones		 #
{

 
public 

class 
CL_calificaciones "
{ 
private 
static 
readonly 
CL_calificaciones  1

_instancia2 <
== >
new? B
CL_calificacionesC T
(T U
)U V
;V W
public 
static 
CL_calificaciones '
	Instancia( 1
{ 	
get 
{ 
return 
CL_calificaciones *
.* +

_instancia+ 5
;5 6
}7 8
} 	
public 
bool  
crear_calificaciones (
(( )
E_Calificaciones) 9
calificaciones: H
,I J
stringK Q
dniR U
)U V
{ 	
return 
CD_Calificacines #
.# $
	Instancia$ -
.- . 
crear_calificaciones. B
(B C
dniC F
,F G
calificacionesH V
)V W
==X Z
true[ _
?` a
trueb f
:g h
falsei n
;n o
} 	
public 
E_Calificaciones &
mostrar_calificaciones_dni  :
(: ;
string; A
dniB E
)E F
{ 	
return 
CD_Calificacines #
.# $
	Instancia$ -
.- .&
mostrar_calificaciones_dni. H
(H I
dniI L
)L M
;M N
}   	
public!! 
bool!! +
modificar_calificacion_parcial1!! 3
(!!3 4
E_Calificaciones!!4 D
calificaciones!!E S
,!!S T
string!!U [
dni!!\ _
)!!_ `
{"" 	
return## 
CD_Calificacines## #
.### $
	Instancia##$ -
.##- .+
modificar_calificacion_parcial1##. M
(##M N
calificaciones##N \
,##\ ]
dni##] `
)##` a
==##b d
true##e i
?##j k
true##l p
:##q r
false##s x
;##x y
}$$ 	
public&& 
bool&& ,
 modificar_calificacion_parcial12&& 4
(&&4 5
E_Calificaciones&&5 E
calificaciones&&F T
,&&T U
string&&V \
dni&&] `
)&&` a
{'' 	
return(( 
CD_Calificacines(( #
.((# $
	Instancia(($ -
.((- .+
modificar_calificacion_parcial2((. M
(((M N
calificaciones((N \
,((\ ]
dni((^ a
)((a b
==((c e
true((f j
?((k l
true((m q
:((r s
false((t y
;((y z
})) 	
public** 
bool** +
modificar_calificacion_Trabajos** 3
(**3 4
E_Calificaciones**4 D
calificaciones**E S
,**S T
string**U [
dni**\ _
)**_ `
{++ 	
return,, 
CD_Calificacines,, #
.,,# $
	Instancia,,$ -
.,,- .+
modificar_calificacion_Trabajos,,. M
(,,M N
calificaciones,,N \
,,,\ ]
dni,,^ a
),,a b
==,,c e
true,,f j
?,,k l
true,,m q
:,,r s
false,,t y
;,,y z
}-- 	
public.. 
bool.. 
modificar_Beca.. "
(.." #
string..# )
dni..* -
)..- .
{// 	
return00 
CD_BecaExcelencia00 $
.00$ %
	Instancia00% .
.00. /
modificar_Beca00/ =
(00= >
dni00> A
)00A B
;00B C
}11 	
public22 
bool22 (
modificar_calificacion_Final22 0
(220 1
E_Calificaciones221 A
calificaciones22B P
,22P Q
string22R X
dni22Y \
)22\ ]
{33 	
return44 
CD_Calificacines44 #
.44# $
	Instancia44$ -
.44- .(
modificar_calificacion_Final44. J
(44J K
calificaciones44K Y
,44Y Z
dni44[ ^
)44^ _
==44` b
true44c g
?44h i
true44j n
:44o p
false44q v
;44v w
}55 	
public77 
bool77 +
modificar_calificacion_Promedio77 3
(773 4
E_Calificaciones774 D
calificaciones77E S
,77S T
string77U [
dni77\ _
)77_ `
{88 	
return99 
CD_Calificacines99 #
.99# $
	Instancia99$ -
.99- .+
modificar_calificacion_Promedio99. M
(99M N
calificaciones99N \
,99\ ]
dni99^ a
)99a b
==99c e
true99f j
?99k l
true99m q
:99r s
false99t y
;99y z
}:: 	
}<< 
}== è
aC:\Users\artur\Downloads\Calidad_Proyecto 4\Calidad_version_1-master\CapaLogica\Curso\CL_Curso.cs
	namespace 	

CapaLogica
 
. 
Curso 
{		 
public

 

class

 
CL_Curso

 
{ 
public 
bool 
crear_Curso 
(  
E_Curso  '
curso( -
)- .
{ 	
return 
CD_Curso 
. 
	Instancia %
.% &
Crear_curso& 1
(1 2
curso2 7
)7 8
==9 ;
true< @
?A B
trueC G
:H I
falseJ O
;O P
} 	
public 
List 
< 
E_Curso 
> 
listar_cursos *
(* +
)+ ,
{ 	
return 
CD_Curso 
. 
	Instancia %
.% &
listar_cursos& 3
(3 4
)4 5
;5 6
} 	
public 
bool !
Enalazar_Curso_Alumno )
() *
string* 0
dni1 4
,4 5
int6 9
Curso_ID: B
)B C
{ 	
return 
CD_Curso 
. 
	Instancia %
.% &!
Enalazar_Curso_Alumno& ;
(; <
dni< ?
,? @
Curso_IDA I
)I J
==K M
trueN R
?S T
trueU Y
:Z [
false\ a
;a b
} 	
} 
} "
`C:\Users\artur\Downloads\Calidad_Proyecto 4\Calidad_version_1-master\CapaLogica\Pagos\L_Pagos.cs
	namespace		 	

CapaLogica		
 
.		 
Pagos		 
{

 
public 

class 
L_Pagos 
{ 
private 
static 
readonly 
L_Pagos  '

_instancia( 2
=3 4
new5 8
L_Pagos9 @
(@ A
)A B
;B C
public 
static 
L_Pagos 
	Instancia '
{ 	
get 
{ 
return 
L_Pagos  
.  !

_instancia! +
;+ ,
}- .
} 	
public 
bool 
pago_pension  
(  !
E_Alumno! )
ea* ,
), -
{ 	
bool 
validar 
= 
false  
;  !
if 
( 
	CD_Alumno 
. 
	Instancia #
.# $
mostrar_alumno_dni$ 6
(6 7
ea7 9
.9 :
	Alumn_dni: C
)C D
!=E G
nullH L
)L M
{ 
E_Alumno 
alumno 
=  !
new" %
E_Alumno& .
(. /
)/ 0
;0 1
alumno   
=   
	CD_Alumno   "
.  " #
	Instancia  # ,
.  , -
mostrar_alumno_dni  - ?
(  ? @
ea  @ B
.  B C
	Alumn_dni  C L
)  L M
;  M N
if!! 
(!! 
alumno!! 
.!! 
Alumn_Estado!! '
==!!( *
$str!!+ 2
)!!2 3
{"" 
if## 
(## 
CD_Pagos##  
.##  !
	Instancia##! *
.##* +
modificar_pago##+ 9
(##9 :
ea##: <
.##< =
	Alumn_dni##= F
)##F G
)##G H
validar$$ 
=$$  !
true$$" &
;$$& '
}%% 
}&& 
return'' 
validar'' 
;'' 
}(( 	
public))	 
List)) 
<)) 
E_Alumno)) 
>)) #
mostrar_alumnos_pagaron)) 6
())6 7
)))7 8
{** 	
List++ 
<++ 
E_Alumno++ 
>++ 
alumno++ !
=++" #
new++$ '
List++( ,
<++, -
E_Alumno++- 5
>++5 6
(++6 7
)++7 8
;++8 9
if,, 
(,, 
CD_Pagos,, 
.,, 
	Instancia,, "
.,," #
mostrar_alumnos,,# 2
(,,2 3
$str,,3 9
),,9 :
!=,,; =
null,,> B
),,B C
{-- 
alumno.. 
=.. 
CD_Pagos.. !
...! "
	Instancia.." +
...+ ,
mostrar_alumnos.., ;
(..; <
$str..< B
)..B C
;..C D
}00 
return11 
alumno11 
.11 
Count11 
>11  !
$num11" #
?11$ %
alumno11& ,
:11- .
null11/ 3
;113 4
}22 	
public33 
List33 
<33 
E_Alumno33 
>33 %
mostrar_alumnos_NOpagaron33 7
(337 8
)338 9
{44 	
List55 
<55 
E_Alumno55 
>55 
alumno55 !
=55" #
new55$ '
List55( ,
<55, -
E_Alumno55- 5
>555 6
(556 7
)557 8
;558 9
if66 
(66 
CD_Pagos66 
.66 
	Instancia66 "
.66" #
mostrar_alumnos66# 2
(662 3
$str663 :
)66: ;
!=66< >
null66? C
)66C D
{77 
alumno88 
=88 
CD_Pagos88 !
.88! "
	Instancia88" +
.88+ ,
mostrar_alumnos88, ;
(88; <
$str88< C
)88C D
;88D E
}:: 
return;; 
alumno;; 
.;; 
Count;; 
>;;  !
$num;;" #
?;;$ %
alumno;;& ,
:;;- .
null;;/ 3
;;;3 4
}== 	
}?? 
}@@ 
jC:\Users\artur\Downloads\Calidad_Proyecto 4\Calidad_version_1-master\CapaLogica\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str %
)% &
]& '
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str '
)' (
]( )
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *